{"version":3,"file":"index.js","sources":["../../src/org_helper.ts","../../src/access_helper.ts","../../src/api.ts","../../src/helpers.ts","../../src/client.ts"],"sourcesContent":["import {OrgIdToOrgMemberInfo, OrgMemberInfo} from \"./org\";\n\nexport type OrgHelper = {\n    getOrgs: () => OrgMemberInfo[]\n    getOrgIds: () => string[]\n    getOrg: (orgId: string) => OrgMemberInfo | undefined\n    getOrgByName: (orgName: string) => OrgMemberInfo | undefined\n}\n\nexport function getOrgHelper(\n    orgIdToOrgMemberInfo: OrgIdToOrgMemberInfo,\n): OrgHelper {\n    return {\n        getOrg(orgId: string): OrgMemberInfo | undefined {\n            if (orgIdToOrgMemberInfo.hasOwnProperty(orgId)) {\n                return orgIdToOrgMemberInfo[orgId]\n            } else {\n                return undefined\n            }\n        },\n        getOrgIds(): string[] {\n            return Object.keys(orgIdToOrgMemberInfo)\n        },\n        getOrgs(): OrgMemberInfo[] {\n            return Object.values(orgIdToOrgMemberInfo)\n        },\n        getOrgByName(orgName: string): OrgMemberInfo | undefined {\n            for (const orgMemberInfo of Object.values(orgIdToOrgMemberInfo)) {\n                if (orgMemberInfo.orgName === orgName || orgMemberInfo.urlSafeOrgName === orgName) {\n                    return orgMemberInfo\n                }\n            }\n            return undefined\n        },\n    }\n}","import {OrgIdToOrgMemberInfo} from \"./org\";\n\nexport type AccessHelper = {\n    isRole: (orgId: string, role: string) => boolean\n    isAtLeastRole: (orgId: string, role: string) => boolean\n    hasPermission: (orgId: string, permission: string) => boolean\n    hasAllPermissions: (orgId: string, permissions: string[]) => boolean\n    getAccessHelperWithOrgId: (orgId: string) => AccessHelperWithOrg\n}\n\nexport type AccessHelperWithOrg = {\n    isRole: (role: string) => boolean\n    isAtLeastRole: (role: string) => boolean\n    hasPermission: (permission: string) => boolean\n    hasAllPermissions: (permissions: string[]) => boolean\n}\n\nexport function getAccessHelper(\n    orgIdToOrgMemberInfo: OrgIdToOrgMemberInfo,\n): AccessHelper {\n    function isRole(orgId: string, role: string): boolean {\n        const orgMemberInfo = orgIdToOrgMemberInfo[orgId]\n        if (orgMemberInfo === undefined) {\n            return false;\n        }\n        return orgMemberInfo.userAssignedRole === role\n    }\n    \n    function isAtLeastRole(orgId: string, role: string): boolean {\n        const orgMemberInfo = orgIdToOrgMemberInfo[orgId]\n        if (orgMemberInfo === undefined) {\n            return false;\n        }\n        return orgMemberInfo.userInheritedRolesPlusCurrentRole.includes(role)\n    }\n\n    function hasPermission(orgId: string, permission: string): boolean {\n        const orgMemberInfo = orgIdToOrgMemberInfo[orgId]\n        if (orgMemberInfo === undefined) {\n            return false;\n        }\n        return orgMemberInfo.userPermissions.includes(permission)\n    }\n\n    function hasAllPermissions(orgId: string, permissions: string[]): boolean {\n        const orgMemberInfo = orgIdToOrgMemberInfo[orgId]\n        if (orgMemberInfo === undefined) {\n            return false;\n        }\n        return permissions.every(permission => orgMemberInfo.userPermissions.includes(permission))\n    }\n\n    function getAccessHelperWithOrgId(orgId: string): AccessHelperWithOrg {\n        return {\n            isRole(role: string): boolean {\n                return isRole(orgId, role)\n            },\n            isAtLeastRole(role: string): boolean {\n                return isAtLeastRole(orgId, role)\n            },\n            hasPermission(permission: string): boolean {\n                return hasPermission(orgId, permission)\n            },\n            hasAllPermissions(permissions: string[]): boolean {\n                return hasAllPermissions(orgId, permissions)\n            },\n        }\n    }\n    \n    return {\n        isRole,\n        isAtLeastRole,\n        hasPermission,\n        hasAllPermissions,\n        getAccessHelperWithOrgId,\n    }\n}\n","import {OrgIdToOrgMemberInfo} from \"./org\"\nimport {getOrgHelper, OrgHelper} from \"./org_helper\";\nimport {getAccessHelper, AccessHelper} from \"./access_helper\";\n\nexport type User = {\n    userId: string\n\n    email: string\n    emailConfirmed: boolean,\n\n    hasPassword: boolean,\n\n    username?: string\n    firstName?: string,\n    lastName?: string,\n    pictureUrl?: string,\n\n    locked: boolean,\n    enabled: boolean,\n    mfaEnabled: boolean,\n\n    createdAt: number,\n    lastActiveAt: number,\n\n    legacyUserId?: string\n    properties?: { [key: string]: unknown }\n}\n\nexport type AuthenticationInfo = {\n    accessToken: string\n    expiresAtSeconds: number\n    orgHelper: OrgHelper\n    accessHelper: AccessHelper\n\n    /**\n     * You should prefer orgHelper to orgIdToOrgMemberInfo.\n     * orgHelper provides useful abstractions over this mapping\n     */\n    orgIdToOrgMemberInfo?: OrgIdToOrgMemberInfo\n    user: User\n\n    // If someone on your team is impersonating another user, this will be set to the employee's ID\n    // By default, user impersonation is turned off and this will be undefined\n    impersonatorUserId?: string\n}\n\n\nexport type LogoutResponse = {\n    redirect_to: string\n}\n\nexport function fetchAuthenticationInfo(authUrl: string): Promise<AuthenticationInfo | null> {\n    return fetch(`${authUrl}/api/v1/refresh_token`, {\n        method: \"GET\",\n        credentials: \"include\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n    }).then((res) => {\n        if (res.status === 401) {\n            return null\n        } else if (res.status === 0) {\n            logCorsError()\n            return Promise.reject({\n                status: 503,\n                message: \"Unable to process authentication response\",\n            })\n        } else if (!res.ok) {\n            return Promise.reject({\n                status: res.status,\n                message: res.statusText,\n            })\n        } else {\n            return parseResponse(res)\n        }\n    })\n}\n\nexport function logout(authUrl: string): Promise<LogoutResponse> {\n    return fetch(`${authUrl}/api/v1/logout`, {\n        method: \"POST\",\n        credentials: \"include\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n    }).then((res) => {\n        if (res.status === 0) {\n            logCorsError()\n            return Promise.reject({\n                status: 503,\n                message: \"Unable to process authentication response\",\n            })\n        } else if (!res.ok) {\n            console.error(\"Logout error\", res.status, res.statusText)\n            return Promise.reject({\n                status: res.status,\n                message: res.statusText,\n            })\n        } else {\n            return res.json()\n        }\n    })\n}\n\nfunction parseResponse(res: Response): Promise<AuthenticationInfo> {\n    return res.text().then(httpResponse => {\n        try {\n            return parseJsonConvertingSnakeToCamel(httpResponse)\n        } catch (e) {\n            console.error(\"Unable to process authentication response\", e)\n            return Promise.reject({\n                status: 500,\n                message: \"Unable to process authentication response\",\n            })\n        }\n    }, e => {\n        console.error(\"Unable to process authentication response\", e)\n        return Promise.reject({\n            status: 500,\n            message: \"Unable to process authentication response\",\n        })\n    })\n}\n\n// The API responds with snake_case, but TypeScript convention is camelCase.\n// When parsing JSON, we pass in reviver function to convert from snake_case to camelCase.\nexport function parseJsonConvertingSnakeToCamel(str: string): AuthenticationInfo {\n    return JSON.parse(str, function (key, value) {\n        if (key === \"org_id\") {\n            this.orgId = value\n        } else if (key === \"org_name\") {\n            this.orgName = value\n        } else if (key === \"url_safe_org_name\") {\n            this.urlSafeOrgName = value\n        } else if (key === \"user_role\") {\n            this.userAssignedRole = value\n        } else if (key === \"inherited_user_roles_plus_current_role\") {\n            this.userInheritedRolesPlusCurrentRole = value\n        } else if (key === \"user_permissions\") {\n            this.userPermissions = value\n        } else if (key === \"access_token\") {\n            this.accessToken = value\n        } else if (key === \"expires_at_seconds\") {\n            this.expiresAtSeconds = value\n        } else if (key === \"org_id_to_org_member_info\") {\n            this.orgIdToOrgMemberInfo = value\n            this.orgHelper = getOrgHelper(value)\n            this.accessHelper = getAccessHelper(value)\n        } else if (key === \"user_id\") {\n            this.userId = value\n        } else if (key === \"email_confirmed\") {\n            this.emailConfirmed = value\n        } else if (key === \"first_name\") {\n            this.firstName = value\n        } else if (key === \"last_name\") {\n            this.lastName = value\n        } else if (key === \"picture_url\") {\n            this.pictureUrl = value\n        } else if (key === \"mfa_enabled\") {\n            this.mfaEnabled = value\n        } else if (key === \"has_password\") {\n            this.hasPassword = value\n        } else if (key === \"created_at\") {\n            this.createdAt = value\n        } else if (key === \"last_active_at\") {\n            this.lastActiveAt = value\n        } else if (key === \"legacy_user_id\") {\n            this.legacyUserId = value\n        } else if (key === \"impersonator_user\") {\n            this.impersonatorUserId = value\n        } else {\n            return value\n        }\n    })\n}\n\nfunction logCorsError() {\n    console.error(\n        \"Request to PropelAuth failed due to a CORS error. There are a few likely causes: \\n\" +\n        \" 1. In the Frontend Integration section of your dashboard, make sure your requests are coming either the specified Application URL or localhost with a matching port.\\n\" +\n        \" 2. Make sure your server is hosted on HTTPS in production.\"\n    )\n}","export function currentTimeSeconds() {\n    return Date.now() / 1000\n}\n\nexport function hasLocalStorage(): boolean {\n    return typeof localStorage !== \"undefined\"\n}\n\nexport function hasWindow(): boolean {\n    return typeof window !== \"undefined\"\n}\n\nexport function getLocalStorageNumber(key: string): number | null {\n    if (!hasLocalStorage()) {\n        return null\n    }\n\n    const value = localStorage.getItem(key)\n    if (!value) {\n        return null\n    }\n    const num = parseInt(value, 10)\n    if (Number.isNaN(num)) {\n        return null\n    }\n    return num\n}\n","import {AuthenticationInfo, fetchAuthenticationInfo, logout} from \"./api\"\nimport {currentTimeSeconds, getLocalStorageNumber, hasLocalStorage, hasWindow} from \"./helpers\"\n\nconst LOGGED_IN_AT_KEY = \"__PROPEL_AUTH_LOGGED_IN_AT\"\nconst LOGGED_OUT_AT_KEY = \"__PROPEL_AUTH_LOGGED_OUT_AT\"\nconst AUTH_TOKEN_REFRESH_BEFORE_EXPIRATION_SECONDS = 4 * 60\nconst DEBOUNCE_DURATION_FOR_REFOCUS_SECONDS = 4 * 60\n\nexport interface RedirectToSignupOptions {\n    postSignupRedirectUrl: string\n}\n\nexport interface RedirectToLoginOptions {\n    postLoginRedirectUrl: string\n}\n\nexport interface IAuthClient {\n    /**\n     * If the user is logged in, this method returns an access token, the time (in seconds) that the token will expire,\n     * the user's organizations (including org names and user's role within the org), and the user's metadata.\n     * Otherwise, this method returns null.\n     *\n     * The promise will generally resolve immediately, unless our current information is stale in which case it will\n     * make an API request.\n     *\n     * @param forceRefresh If true, this method will always make an API request. Default false\n     */\n    getAuthenticationInfoOrNull(forceRefresh?: boolean): Promise<AuthenticationInfo | null>\n\n    /**\n     * Logs the current user out.\n     * @param redirectAfterLogout If true, will redirect the user to the configured logout URL.\n     */\n    logout(redirectAfterLogout: boolean): Promise<void>\n\n    /**\n     * Gets the URL for the hosted signup page.\n     */\n    getSignupPageUrl(options?: RedirectToSignupOptions): string\n\n    /**\n     * Gets the URL for the hosted login page.\n     */\n    getLoginPageUrl(options?: RedirectToLoginOptions): string\n\n    /**\n     * Gets the URL for the hosted account page.\n     */\n    getAccountPageUrl(): string\n\n    /**\n     * Gets the URL for the hosted organization page.\n     * @param orgId The ID of the organization's page to load. If not specified, a random one will be used instead.\n     */\n    getOrgPageUrl(orgId?: string): string\n\n    /**\n     * Gets the URL for the hosted create organization page.\n     */\n    getCreateOrgPageUrl(): string\n\n    /**\n     * Gets the URL for the hosted SAML configuration page.\n     */\n    getSetupSAMLPageUrl(orgId: string): string\n\n    /**\n     * Redirects the user to the signup page.\n     */\n    redirectToSignupPage(options?: RedirectToSignupOptions): void\n\n    /**\n     * Redirects the user to the login page.\n     */\n    redirectToLoginPage(options?: RedirectToLoginOptions): void\n\n    /**\n     * Redirects the user to the account page.\n     */\n    redirectToAccountPage(): void\n\n    /**\n     * Redirects the user to the organization page.\n     * @param orgId The ID of the organization\"s page to load. If not specified, a random one will be used instead.\n     */\n    redirectToOrgPage(orgId?: string): void\n\n    /**\n     * Redirects the user to the create organization page.\n     */\n    redirectToCreateOrgPage(): void\n\n    /**\n     * Redirects the user to the SAML configuration page.\n     */\n    redirectToSetupSAMLPage(orgId: string): void\n\n\n    /**\n     * Adds an observer which is called whenever the users logs in or logs out.\n     */\n    addLoggedInChangeObserver(observer: (isLoggedIn: boolean) => void): void\n\n    /**\n     * Removes the observer\n     */\n    removeLoggedInChangeObserver(observer: (isLoggedIn: boolean) => void): void\n\n    /**\n     * Cleanup the auth client if you no longer need it.\n     */\n    destroy(): void\n}\n\nexport interface IAuthOptions {\n    /**\n     * Base URL where your authentication pages are hosted. See **Frontend Integration** section of your PropelAuth project.\n     */\n    authUrl: string\n\n    /**\n     * If true, periodically refresh the token in the background.\n     * This helps ensure you always have a valid token ready to go when you need it.\n     *\n     * Default true\n     */\n    enableBackgroundTokenRefresh?: boolean\n}\n\ninterface ClientState {\n    initialLoadFinished: boolean\n    authenticationInfo: AuthenticationInfo | null\n    observers: ((isLoggedIn: boolean) => void)[]\n    lastLoggedInAtMessage: number | null\n    lastLoggedOutAtMessage: number | null\n    refreshInterval: number | null\n    lastRefresh: number | null\n    readonly authUrl: string\n}\n\nfunction validateAndCleanupOptions(authOptions: IAuthOptions) {\n    try {\n        // This helps make sure we have a consistent URL ignoring things like trailing slashes\n        const authUrl = new URL(authOptions.authUrl)\n        authOptions.authUrl = authUrl.origin\n    } catch (e) {\n        console.error(\"Invalid authUrl\", e)\n        throw new Error(\"Unable to initialize auth client\")\n    }\n\n    if (authOptions.enableBackgroundTokenRefresh === undefined) {\n        authOptions.enableBackgroundTokenRefresh = true\n    }\n}\n\nexport function createClient(authOptions: IAuthOptions): IAuthClient {\n    validateAndCleanupOptions(authOptions)\n\n    // Internal state\n    const clientState: ClientState = {\n        initialLoadFinished: false,\n        authenticationInfo: null,\n        observers: [],\n        lastLoggedInAtMessage: getLocalStorageNumber(LOGGED_IN_AT_KEY),\n        lastLoggedOutAtMessage: getLocalStorageNumber(LOGGED_OUT_AT_KEY),\n        authUrl: authOptions.authUrl,\n        refreshInterval: null,\n        lastRefresh: null,\n    }\n\n    // Helper functions\n    function notifyObservers(isLoggedIn: boolean) {\n        for (let i = 0; i < clientState.observers.length; i++) {\n            const observer = clientState.observers[i]\n            if (observer) {\n                observer(isLoggedIn)\n            }\n        }\n    }\n\n    function userJustLoggedOut(accessToken: string | undefined, previousAccessToken: string | undefined) {\n        // Edge case: the first time we go to the page, if we can't load the\n        //   auth token we should treat it as a logout event\n        return !accessToken && (previousAccessToken || !clientState.initialLoadFinished)\n    }\n\n    function userJustLoggedIn(accessToken: string | undefined, previousAccessToken: string | undefined) {\n        return !previousAccessToken && accessToken\n    }\n\n    function updateLastLoggedOutAt() {\n        const loggedOutAt = currentTimeSeconds()\n        clientState.lastLoggedOutAtMessage = loggedOutAt\n        if (hasLocalStorage()) {\n            localStorage.setItem(LOGGED_OUT_AT_KEY, String(loggedOutAt))\n        }\n    }\n\n    function updateLastLoggedInAt() {\n        const loggedInAt = currentTimeSeconds()\n        clientState.lastLoggedInAtMessage = loggedInAt\n        if (hasLocalStorage()) {\n            localStorage.setItem(LOGGED_IN_AT_KEY, String(loggedInAt))\n        }\n    }\n\n    function setAuthenticationInfoAndUpdateDownstream(authenticationInfo: AuthenticationInfo | null) {\n        const previousAccessToken = clientState.authenticationInfo?.accessToken\n        clientState.authenticationInfo = authenticationInfo\n        const accessToken = authenticationInfo?.accessToken\n\n        if (userJustLoggedOut(accessToken, previousAccessToken)) {\n            notifyObservers(false)\n            updateLastLoggedOutAt()\n        } else if (userJustLoggedIn(accessToken, previousAccessToken)) {\n            notifyObservers(true)\n            updateLastLoggedInAt()\n        }\n\n        clientState.lastRefresh = currentTimeSeconds()\n        clientState.initialLoadFinished = true\n    }\n\n    async function forceRefreshToken(returnCached: boolean): Promise<AuthenticationInfo | null> {\n        try {\n            // Happy case, we fetch auth info and save it\n            const authenticationInfo = await fetchAuthenticationInfo(clientState.authUrl)\n            setAuthenticationInfoAndUpdateDownstream(authenticationInfo)\n            return authenticationInfo\n        } catch (e) {\n            // If there was an error, we sometimes still want to return the value we have cached\n            //   (e.g. if we were prefetching), so in those cases we swallow the exception\n            if (returnCached) {\n                return clientState.authenticationInfo\n            } else {\n                setAuthenticationInfoAndUpdateDownstream(null)\n                throw e\n            }\n        }\n    }\n\n    const getSignupPageUrl = (options?: RedirectToSignupOptions) => {\n        let qs = \"\"\n        if (options && options.postSignupRedirectUrl) {\n            const encode = window ? window.btoa : btoa;\n            qs = new URLSearchParams({\"rt\": encode(options.postSignupRedirectUrl)}).toString()\n        }\n        return `${clientState.authUrl}/signup?${qs}`\n    }\n\n    const getLoginPageUrl = (options?: RedirectToLoginOptions) => {\n        let qs = \"\"\n        if (options && options.postLoginRedirectUrl) {\n            const encode = window ? window.btoa : btoa;\n            qs = new URLSearchParams({\"rt\": encode(options.postLoginRedirectUrl)}).toString()\n        }\n        return `${clientState.authUrl}/login?${qs}`\n    }\n\n    const getAccountPageUrl = () => {\n        return `${clientState.authUrl}/account`\n    }\n\n    const getOrgPageUrl = (orgId?: string) => {\n        if (orgId) {\n            return `${clientState.authUrl}/org?id=${orgId}`\n        } else {\n            return `${clientState.authUrl}/org`\n        }\n    }\n\n    const getCreateOrgPageUrl = () => {\n        return `${clientState.authUrl}/create_org`\n    }\n\n    const getSetupSAMLPageUrl = (orgId: string) => {\n        return `${clientState.authUrl}/saml?id=${orgId}`\n    }\n\n    const client = {\n        addLoggedInChangeObserver(loggedInChangeObserver: (isLoggedIn: boolean) => void): void {\n            const hasObserver = clientState.observers.includes(loggedInChangeObserver)\n            if (hasObserver) {\n                console.error(\"Observer has been attached already.\")\n            } else if (!loggedInChangeObserver) {\n                console.error(\"Cannot add a null observer\")\n            } else {\n                clientState.observers.push(loggedInChangeObserver)\n            }\n        },\n\n        removeLoggedInChangeObserver(loggedInChangeObserver: (isLoggedIn: boolean) => void): void {\n            const observerIndex = clientState.observers.indexOf(loggedInChangeObserver)\n            if (observerIndex === -1) {\n                console.error(\"Cannot find observer to remove\")\n            } else {\n                clientState.observers.splice(observerIndex, 1)\n            }\n        },\n\n        async getAuthenticationInfoOrNull(forceRefresh?: boolean): Promise<AuthenticationInfo | null> {\n            const currentTimeSecs = currentTimeSeconds()\n            if (forceRefresh) {\n                return await forceRefreshToken(false)\n            } else if (!clientState.authenticationInfo) {\n                return await forceRefreshToken(false)\n            } else if (\n                currentTimeSecs + AUTH_TOKEN_REFRESH_BEFORE_EXPIRATION_SECONDS >\n                clientState.authenticationInfo.expiresAtSeconds\n            ) {\n                // Small edge case: If we were being proactive\n                //   and the auth information hasn't expired yet, swallow any exceptions\n                const returnCached = currentTimeSecs < clientState.authenticationInfo.expiresAtSeconds\n                return await forceRefreshToken(returnCached)\n            } else {\n                return clientState.authenticationInfo\n            }\n        },\n\n        getSignupPageUrl(options?: RedirectToSignupOptions): string {\n            return getSignupPageUrl(options)\n        },\n\n        getLoginPageUrl(options?: RedirectToLoginOptions): string {\n            return getLoginPageUrl(options)\n        },\n\n        getAccountPageUrl(): string {\n            return getAccountPageUrl()\n        },\n\n        getOrgPageUrl(orgId?: string): string {\n            return getOrgPageUrl(orgId)\n        },\n\n        getCreateOrgPageUrl(): string {\n            return getCreateOrgPageUrl()\n        },\n\n        getSetupSAMLPageUrl(orgId: string): string {\n            return getSetupSAMLPageUrl(orgId)\n        },\n\n        redirectToSignupPage(options?: RedirectToSignupOptions): void {\n            window.location.href = getSignupPageUrl(options)\n        },\n\n        redirectToLoginPage(options?: RedirectToLoginOptions): void {\n            window.location.href = getLoginPageUrl(options)\n        },\n\n        redirectToAccountPage(): void {\n            window.location.href = getAccountPageUrl()\n        },\n\n        redirectToOrgPage(orgId?: string): void {\n            window.location.href = getOrgPageUrl(orgId)\n        },\n\n        redirectToCreateOrgPage(): void {\n            window.location.href = getCreateOrgPageUrl()\n        },\n\n        redirectToSetupSAMLPage(orgId: string) {\n            window.location.href = getSetupSAMLPageUrl(orgId)\n        },\n\n        async logout(redirectAfterLogout: boolean): Promise<void> {\n            const logoutResponse = await logout(clientState.authUrl)\n            setAuthenticationInfoAndUpdateDownstream(null)\n            if (redirectAfterLogout) {\n                window.location.href = logoutResponse.redirect_to\n            }\n        },\n\n        destroy() {\n            clientState.observers = []\n            window.removeEventListener(\"storage\", onStorageChange)\n            if (clientState.refreshInterval) {\n                clearInterval(clientState.refreshInterval)\n            }\n        },\n    }\n\n    const onStorageChange = async function () {\n        // If localStorage isn't available, nothing to do here.\n        // This usually happens in frameworks that have some SSR components\n        if (!hasLocalStorage()) {\n            return\n        }\n\n        const loggedOutAt = getLocalStorageNumber(LOGGED_OUT_AT_KEY)\n        const loggedInAt = getLocalStorageNumber(LOGGED_IN_AT_KEY)\n\n        // If we've detected a logout event after the last one our client is aware of, trigger a refresh\n        if (loggedOutAt && (!clientState.lastLoggedOutAtMessage || loggedOutAt > clientState.lastLoggedOutAtMessage)) {\n            clientState.lastLoggedOutAtMessage = loggedOutAt\n            if (clientState.authenticationInfo) {\n                await forceRefreshToken(true)\n            }\n        }\n\n        // If we've detected a login event after the last one our client is aware of, trigger a refresh\n        if (loggedInAt && (!clientState.lastLoggedInAtMessage || loggedInAt > clientState.lastLoggedInAtMessage)) {\n            clientState.lastLoggedInAtMessage = loggedInAt\n            if (!clientState.authenticationInfo) {\n                await forceRefreshToken(true)\n            }\n        }\n    }\n\n    // If we were offline or on a different tab, when we return, refetch auth info\n    // Some browsers trigger focus more often than we'd like, so we'll debounce a little here as well\n    const onOnlineOrFocus = async function () {\n        if (clientState.lastRefresh && currentTimeSeconds() > clientState.lastRefresh + DEBOUNCE_DURATION_FOR_REFOCUS_SECONDS) {\n            await forceRefreshToken(true)\n        } else {\n            await client.getAuthenticationInfoOrNull()\n        }\n    }\n\n    if (hasWindow()) {\n        window.addEventListener(\"storage\", onStorageChange)\n        window.addEventListener(\"online\", onOnlineOrFocus)\n        window.addEventListener(\"focus\", onOnlineOrFocus)\n\n        if (authOptions.enableBackgroundTokenRefresh) {\n            client.getAuthenticationInfoOrNull()\n            clientState.refreshInterval = window.setInterval(client.getAuthenticationInfoOrNull, 60000)\n        }\n    }\n\n    return client\n}\n"],"names":["getOrgHelper","orgIdToOrgMemberInfo","getOrg","orgId","hasOwnProperty","undefined","getOrgIds","Object","keys","getOrgs","values","getOrgByName","orgName","orgMemberInfo","urlSafeOrgName","getAccessHelper","isRole","role","userAssignedRole","isAtLeastRole","userInheritedRolesPlusCurrentRole","includes","hasPermission","permission","userPermissions","hasAllPermissions","permissions","every","getAccessHelperWithOrgId","fetchAuthenticationInfo","authUrl","fetch","method","credentials","headers","then","res","status","logCorsError","Promise","reject","message","ok","statusText","parseResponse","logout","console","error","json","text","httpResponse","parseJsonConvertingSnakeToCamel","e","str","JSON","parse","key","value","accessToken","expiresAtSeconds","orgHelper","accessHelper","userId","emailConfirmed","firstName","lastName","pictureUrl","mfaEnabled","hasPassword","createdAt","lastActiveAt","legacyUserId","impersonatorUserId","currentTimeSeconds","Date","now","hasLocalStorage","localStorage","hasWindow","window","getLocalStorageNumber","getItem","num","parseInt","Number","isNaN","LOGGED_IN_AT_KEY","LOGGED_OUT_AT_KEY","AUTH_TOKEN_REFRESH_BEFORE_EXPIRATION_SECONDS","DEBOUNCE_DURATION_FOR_REFOCUS_SECONDS","validateAndCleanupOptions","authOptions","URL","origin","Error","enableBackgroundTokenRefresh","createClient","clientState","initialLoadFinished","authenticationInfo","observers","lastLoggedInAtMessage","lastLoggedOutAtMessage","refreshInterval","lastRefresh","notifyObservers","isLoggedIn","i","length","observer","userJustLoggedOut","previousAccessToken","userJustLoggedIn","updateLastLoggedOutAt","loggedOutAt","setItem","String","updateLastLoggedInAt","loggedInAt","setAuthenticationInfoAndUpdateDownstream","forceRefreshToken","returnCached","getSignupPageUrl","options","qs","postSignupRedirectUrl","encode","btoa","URLSearchParams","toString","getLoginPageUrl","postLoginRedirectUrl","getAccountPageUrl","getOrgPageUrl","getCreateOrgPageUrl","getSetupSAMLPageUrl","client","addLoggedInChangeObserver","loggedInChangeObserver","hasObserver","push","removeLoggedInChangeObserver","observerIndex","indexOf","splice","getAuthenticationInfoOrNull","forceRefresh","currentTimeSecs","redirectToSignupPage","location","href","redirectToLoginPage","redirectToAccountPage","redirectToOrgPage","redirectToCreateOrgPage","redirectToSetupSAMLPage","redirectAfterLogout","logoutResponse","redirect_to","destroy","removeEventListener","onStorageChange","clearInterval","onOnlineOrFocus","addEventListener","setInterval"],"mappings":"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"}